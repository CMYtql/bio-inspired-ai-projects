using Genetic_Algorithm_Commons.Util;

namespace Genetic_Algorithm_Commons.Problems.InstanceDescriptions {
    public class TaskSchedulingInstanceDescription : ProblemInstanceDescriptionBase {
        public CommunicationGraph CommGraph { get; private set; }
        public int TaskCount { get; private set; }
        public int ProcessorCount { get; private set; }

        public TaskSchedulingInstanceDescription(int[][] dependencyMatrix, int taskCount, int processorCount) {
            this.CommGraph = new CommunicationGraph(dependencyMatrix);
            this.TaskCount = taskCount;
            this.ProcessorCount = processorCount;
        }

        public static TaskSchedulingInstanceDescription ClassExample(int processorCount) {
            int[][] classExample = new int[6][] {
                new int[] {5,10,5,-1,-1,-1},
                new int[] {-1,7,-1,12,10,-1},
                new int[] {-1,-1,8,-1,8,-1},
                new int[] {-1,-1,-1,6,-1,5},
                new int[] {-1,-1,-1,-1,4,10},
                new int[] {-1,-1,-1,-1,-1,3}
            };
            return new TaskSchedulingInstanceDescription(classExample, 6, processorCount);
        }

        public static TaskSchedulingInstanceDescription Gauss18(int processorCount) {
            int[][] gauss18 = new int[18][] {
                    new int[] {8,12,12,12,12,12,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,4,-1,-1,-1,8,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,4,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,4,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,4,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,6,12,12,12,12,12,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,8,8,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,8,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,8,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,12,12,12,12,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,8,8,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,8},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,12,12},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1}
                };
            return new TaskSchedulingInstanceDescription(gauss18, 18, processorCount);
        }

        public static TaskSchedulingInstanceDescription G18(int processorCount) {
            int[][] g18 = new int[18][] {
                    new int[] {1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,3,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,3,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,3,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,3,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,10,-1,-1,-1,1,1,1,1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,-1,-1,1,1,1,1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,-1,1,1,1,1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,1,1,1,1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1}
                };
            return new TaskSchedulingInstanceDescription(g18, 18, processorCount);
        }

        public static TaskSchedulingInstanceDescription G40(int processorCount) {
            int[][] g40 = new int[40][] {
                    new int[] {4,-1,1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,4,-1,1,-1,1,-1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4}
                };
            return new TaskSchedulingInstanceDescription(g40, 40, processorCount);
        }

        public static TaskSchedulingInstanceDescription Tree15(int processorCount) {
            int[][] tree15 = new int[15][] {
                    new int[] { 1, 1, 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1, 1,-1, 1, 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1, 1,-1,-1, 1, 1,-1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1, 1,-1,-1,-1, 1, 1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1, 1,-1,-1,-1,-1, 1, 1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1, 1, 1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1, 1, 1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 1,-1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 1,-1},
                    new int[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 1}
                };
            return new TaskSchedulingInstanceDescription(tree15, 15, processorCount);
        }
    }
}
